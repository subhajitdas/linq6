{"version":3,"sources":["../../src/tests/enumerable.js"],"names":[],"mappings":";;AAAA;;AACA;;AAEA,SAAS,YAAT,EAAuB,YAAW;AAC9B,OAAG,8DAAH,EAAmE,YAAW;AAC1E,YAAI,MAAM,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAAN;YACA,MAAM,IAAI,GAAJ,CAAQ,CAAC,CAAC,CAAD,EAAI,EAAJ,CAAD,EAAU,CAAC,CAAD,EAAI,EAAJ,CAAV,EAAmB,CAAC,CAAD,EAAI,EAAJ,CAAnB,CAAR,CAAN,CAFsE;AAG1E,SAAC,YAAW;AACR,6BAAW,IAAX,CAAgB,GAAhB,EADQ;SAAX,CAAD,CAEG,MAFH,CAEU,GAFV,CAEc,KAFd,GAH0E;AAM1E,yBAAW,IAAX,CAAgB,GAAhB,EAAqB,MAArB,CAA4B,EAA5B,CAA+B,UAA/B,mBAN0E;;AAQ1E,SAAC,YAAW;AACR,6BAAW,IAAX,CAAgB,GAAhB,EADQ;SAAX,CAAD,CAEG,MAFH,CAEU,GAFV,CAEc,KAFd,GAR0E;AAW1E,yBAAW,IAAX,CAAgB,GAAhB,EAAqB,MAArB,CAA4B,EAA5B,CAA+B,UAA/B,mBAX0E;KAAX,CAAnE,CAD8B;;AAe9B,OAAG,4DAAH,EAAiE,YAAW;AACxE,SAAC,YAAW;AACR,6BAAW,IAAX,CAAgB,EAAE,MAAM,MAAN,EAAlB,EADQ;SAAX,CAAD,CAEG,MAFH,CAEU,KAFV,CAEgB,SAFhB,EADwE;KAAX,CAAjE,CAf8B;;AAqB9B,OAAG,qBAAH,EAA0B,YAAW;AACjC,YAAI,aAAa,iBAAW,IAAX,CAAgB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAAhB,CAAb,CAD6B;AAEjC,mBAAW,OAAO,QAAP,CAAX,CAA4B,MAA5B,CAAmC,EAAnC,CAAsC,EAAtC,GAFiC;AAGjC,mBAAW,OAAO,QAAP,CAAX,CAA4B,MAA5B,CAAmC,EAAnC,CAAsC,IAAtC,CAA2C,UAA3C,EAHiC;KAAX,CAA1B,CArB8B;;AA2B9B,OAAG,+DAAH,EAAoE,YAAW;AAC3E,YAAI,aAAa,iBAAW,IAAX,CAAgB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAAhB,EAAiC,KAAjC,CAAuC,KAAK,IAAI,CAAJ,CAAzD,CADuE;AAE3E,mBAAW,MAAX,CAAkB,EAAlB,CAAqB,UAArB,mBAF2E;AAG3E,cAAM,IAAN,CAAW,UAAX,EAAuB,MAAvB,CAA8B,EAA9B,CAAiC,GAAjC,CAAqC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAArC,EAH2E;KAAX,CAApE,CA3B8B;;AAiC9B,OAAG,gEAAH,EAAqE,YAAW;AAC5E,YAAI,aAAa,iBAAW,IAAX,CAAgB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAAhB,EAAiC,MAAjC,CAAwC,KAAK,IAAI,CAAJ,CAA1D,CADwE;AAE5E,mBAAW,MAAX,CAAkB,EAAlB,CAAqB,UAArB,mBAF4E;AAG5E,cAAM,IAAN,CAAW,UAAX,EAAuB,MAAvB,CAA8B,EAA9B,CAAiC,GAAjC,CAAqC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,EAAb,CAArC,EAH4E;KAAX,CAArE,CAjC8B;CAAX,CAAvB","file":"enumerable.js","sourcesContent":["import {Enumerable} from '../linq6';\r\nimport 'should';\r\n\r\ndescribe('Enumerable', function() {\r\n    it('\"from()\" should be able to create enumerable from iterables.', function() {\r\n        let arr = [1, 2, 3, 4, 5],\r\n            map = new Map([[1, 10], [2, 20], [3, 30]]);\r\n        (function() {\r\n            Enumerable.from(arr)\r\n        }).should.not.throw();\r\n        Enumerable.from(arr).should.be.instanceOf(Enumerable);\r\n\r\n        (function() {\r\n            Enumerable.from(arr)\r\n        }).should.not.throw();\r\n        Enumerable.from(map).should.be.instanceOf(Enumerable);\r\n    });\r\n\r\n    it('\"from()\" should throw TypeError if source is not iterable.', function() {\r\n        (function() {\r\n            Enumerable.from({ name: 'test' })\r\n        }).should.throw(TypeError);\r\n    });\r\n\r\n    it('should be iterable.', function() {\r\n        let enumerable = Enumerable.from([1, 2, 3, 4, 5]);\r\n        enumerable[Symbol.iterator].should.be.ok();\r\n        enumerable[Symbol.iterator].should.be.type('function');\r\n    });\r\n\r\n    it('\"where\" should be able to filter the iterable using predicate', function() {\r\n        let enumerable = Enumerable.from([1, 2, 3, 4, 5]).where(x => x > 2);\r\n        enumerable.should.be.instanceOf(Enumerable);\r\n        Array.from(enumerable).should.be.eql([3, 4, 5]);\r\n    });\r\n    \r\n    it('\"select\" should be able to project the iterable using selector', function() {\r\n        let enumerable = Enumerable.from([1, 2, 3, 4, 5]).select(x => x * 2);\r\n        enumerable.should.be.instanceOf(Enumerable);\r\n        Array.from(enumerable).should.be.eql([2, 4, 6, 8, 10]);\r\n    });\r\n});"]}